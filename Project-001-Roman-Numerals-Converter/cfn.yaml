AWSTemplateFormatVersion: 2010-09-09
Description: |
  "AWS CloudFormation Sample Template EC2InstanceWithSecurityGroupSample: Create
  an Amazon EC2 instance running the Amazon Linux AMI. The AMI is chosen based
  on the region in which the stack is run. This example creates an EC2 security
  group for the instance to give you SSH access. **WARNING** This template
  creates an Amazon EC2 instance. You will be billed for the AWS resources used
  if you create a stack from this template."

Parameters:
  #here INSTANCE TYPE - KEY-PAIRS - CIDR (LOCATION) are set
  myInstanceType:
    Description: Here you can see available instance types that you can choose from.
    Type: String
    Default: t2.micro
    AllowedValues:
      - t2.micro
      - m1.small
      - m1.large
    ConstraintDescription: Please select a valid EC2 type.

  myKeyName:
    Description: Here you can see the key-pairs you have created before
    Type: "AWS::EC2::KeyPair::KeyName"
    ConstraintDescription: must be the name of an existing EC2 KeyPair.

  myLocation:
    Description: CIDR block for the location.
    Type: String
    Default: 0.0.0.0/0
    AllowedPattern: ^\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/\d{1,2}$
    ConstraintDescription: Please enter a valid CIDR block in the format X.X.X.X/XX

Resources:
  mySecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security Group for SSH and HTTP access
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0

  myEC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: ami-0715c1897453cabd1 # Linux 2023
      InstanceType: !Ref myInstanceType
      KeyName: !Ref myKeyName
      UserData:
        Fn::Base64: |
          #!/bin/bash -xe

          cd ~
          mkdir -p templates
          curl -o ./app.py https://raw.githubusercontent.com/Golge/aws-projects/main/Project-001-Roman-Numerals-Converter/app.py
          curl -o templates/index.html  https://raw.githubusercontent.com/Golge/aws-projects/main/Project-001-Roman-Numerals-Converter/templates/index.html
          curl -o templates/result.html https://raw.githubusercontent.com/Golge/aws-projects/main/Project-001-Roman-Numerals-Converter/templates/result.html

          yum update -y
          yum install python3-pip python3-devel gcc -y
          #pip3 install flask - this code does not work!!
          pip install flask
          python3 app.py

      SecurityGroupIds:
        - !Ref mySecurityGroup

      Tags:
        - Key: Name
          Value: !Sub Web Server of ${AWS::StackName} Stack

Outputs:
  InstanceId:
    Description: InstanceId of the newly created EC2 instance
    Value: !Ref myEC2Instance
  AZ:
    Description: Availability Zone of the newly created EC2 instance
    Value: !GetAtt
      - myEC2Instance
      - AvailabilityZone
  PublicDNS:
    Description: Public DNSName of the newly created EC2 instance
    Value: !GetAtt
      - myEC2Instance
      - PublicDnsName
  PublicIP:
    Description: Public IP address of the newly created EC2 instance
    Value: !GetAtt
      - myEC2Instance
      - PublicIp
